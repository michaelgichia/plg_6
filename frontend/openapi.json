{"openapi": "3.1.0", "info": {"title": "Athena", "version": "0.1.0"}, "paths": {"/api/v1/login/access-token": {"post": {"tags": ["login"], "summary": "Login Access Token", "description": "OAuth2 compatible token login, get an access token for future requests", "operationId": "login-login_access_token", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_login-login_access_token"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Token"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/login/test-token": {"post": {"tags": ["login"], "summary": "Test Token", "description": "Test access token", "operationId": "login-test_token", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/password-recovery/{email}": {"post": {"tags": ["login"], "summary": "Recover Password", "description": "Password Recovery", "operationId": "login-recover_password", "parameters": [{"name": "email", "in": "path", "required": true, "schema": {"type": "string", "title": "Email"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/reset-password/": {"post": {"tags": ["login"], "summary": "Reset Password", "description": "Reset password", "operationId": "login-reset_password", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/NewPassword"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/password-recovery-html-content/{email}": {"post": {"tags": ["login"], "summary": "Recover Password Html Content", "description": "HTML Content for Password Recovery", "operationId": "login-recover_password_html_content", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "email", "in": "path", "required": true, "schema": {"type": "string", "title": "Email"}}], "responses": {"200": {"description": "Successful Response", "content": {"text/html": {"schema": {"type": "string"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/users/": {"get": {"tags": ["users"], "summary": "Read Users", "description": "Retrieve users.", "operationId": "users-read_users", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UsersPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["users"], "summary": "Create User", "description": "Create new user.", "operationId": "users-create_user", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/users/me": {"get": {"tags": ["users"], "summary": "Read User Me", "description": "Get current user.", "operationId": "users-read_user_me", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "delete": {"tags": ["users"], "summary": "Delete User Me", "description": "Delete own user.", "operationId": "users-delete_user_me", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "patch": {"tags": ["users"], "summary": "Update User Me", "description": "Update own user.", "operationId": "users-update_user_me", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdateMe"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/users/me/password": {"patch": {"tags": ["users"], "summary": "Update Password Me", "description": "Update own password.", "operationId": "users-update_password_me", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdatePassword"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/users/signup": {"post": {"tags": ["users"], "summary": "Register User", "description": "Create new user without the need to be logged in.", "operationId": "users-register_user", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserRegister"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/users/{user_id}": {"get": {"tags": ["users"], "summary": "Read User By Id", "description": "Get a specific user by id.", "operationId": "users-read_user_by_id", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["users"], "summary": "Update User", "description": "Update a user.", "operationId": "users-update_user", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["users"], "summary": "Delete User", "description": "Delete a user.", "operationId": "users-delete_user", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/utils/test-email/": {"post": {"tags": ["utils"], "summary": "Test Email", "description": "Test emails.", "operationId": "utils-test_email", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "email_to", "in": "query", "required": true, "schema": {"type": "string", "format": "email", "title": "Email To"}}], "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/utils/health-check/": {"get": {"tags": ["utils"], "summary": "Health Check", "operationId": "utils-health_check", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "boolean", "title": "Response Utils-Health Check"}}}}}}}, "/api/v1/items/": {"get": {"tags": ["items"], "summary": "Read Items", "description": "Retrieve items.", "operationId": "items-read_items", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemsPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["items"], "summary": "Create Item", "description": "Create new item.", "operationId": "items-create_item", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/items/{id}": {"get": {"tags": ["items"], "summary": "Read Item", "description": "Get item by ID.", "operationId": "items-read_item", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["items"], "summary": "Update Item", "description": "Update an item.", "operationId": "items-update_item", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["items"], "summary": "Delete Item", "description": "Delete an item.", "operationId": "items-delete_item", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/courses/": {"get": {"tags": ["courses"], "summary": "Read Courses", "description": "Retrieve courses with pagination and user-based security filtering.", "operationId": "courses-read_courses", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CoursesPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["courses"], "summary": "Create Course", "description": "Create new course.", "operationId": "courses-create_course", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CourseCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Course"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/courses/{id}": {"get": {"tags": ["courses"], "summary": "Read Course", "description": "Get course by ID, including its documents.", "operationId": "courses-read_course", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CourseWithDocuments"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["courses"], "summary": "Update Course", "description": "Update an course.", "operationId": "courses-update_course", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CourseUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CoursePublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["courses"], "summary": "Delete Course", "description": "Delete an course.", "operationId": "courses-delete_course", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/courses/{id}/documents": {"get": {"tags": ["courses"], "summary": "List Documents", "description": "List documents for a specific course.", "operationId": "courses-list_documents", "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "title": "Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"type": "object", "additionalProperties": true}, "title": "Response Courses-List Documents"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/courses/{id}/quizzes": {"get": {"tags": ["courses"], "summary": "List Quizzes", "description": "Fetches the first 10 Quiz objects related to a specific course,\nensuring the course is owned by the current user.", "operationId": "courses-list_quizzes", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "course_id", "in": "query", "required": true, "schema": {"type": "string", "title": "Course Id"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 50, "exclusiveMinimum": 0, "default": 5, "title": "Limit"}}, {"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "default": 0, "title": "Offset"}}, {"name": "order_by", "in": "query", "required": false, "schema": {"enum": ["created_at", "difficulty_level", "quiz_text"], "type": "string", "default": "created_at", "title": "Order By"}}, {"name": "difficulty", "in": "query", "required": false, "schema": {"$ref": "#/components/schemas/DifficultyLevel", "default": "easy"}}, {"name": "order_direction", "in": "query", "required": false, "schema": {"enum": ["asc", "desc"], "type": "string", "default": "desc", "title": "Order Direction"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QuizzesPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/courses/{id}/attempts": {"get": {"tags": ["courses"], "summary": "Get Attempts Sessions", "description": "Fetch all incomplete quiz sessions for a given course and user.", "operationId": "courses-get_attempts_sessions", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QuizSessionsList"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/courses/{course_id}/quiz/start": {"post": {"tags": ["courses"], "summary": "Start New Quiz Session", "description": "Creates a new, immutable QuizSession, selects the initial set of questions,\nand returns the session details and the first batch of questions.", "operationId": "courses-start_new_quiz_session", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "course_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Course Id"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 50, "exclusiveMinimum": 0, "default": 5, "title": "Limit"}}, {"name": "offset", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "default": 0, "title": "Offset"}}, {"name": "order_by", "in": "query", "required": false, "schema": {"enum": ["created_at", "difficulty_level", "quiz_text"], "type": "string", "default": "created_at", "title": "Order By"}}, {"name": "difficulty", "in": "query", "required": false, "schema": {"$ref": "#/components/schemas/DifficultyLevel", "default": "easy"}}, {"name": "order_direction", "in": "query", "required": false, "schema": {"enum": ["asc", "desc"], "type": "string", "default": "desc", "title": "Order Direction"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "prefixItems": [{"$ref": "#/components/schemas/QuizSessionPublic"}, {"$ref": "#/components/schemas/QuizzesPublic"}], "minItems": 2, "maxItems": 2, "title": "Response Courses-Start New Quiz Session"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/courses/{course_id}/stats": {"get": {"tags": ["courses"], "summary": "Get Quiz Stats", "description": "Fetches course statistics: overall average, total attempts, and the full\ndetails of the single best-scoring quiz session.", "operationId": "courses-get_quiz_stats", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "course_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Course Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QuizStats"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/courses/{id}/flashcards": {"get": {"tags": ["courses"], "summary": "Generate Flashcards By Course Id", "description": "Generate flashcards for a specific course by retrieving relevant chunks and\nusing an LLM to structure the content into Q&A items.", "operationId": "courses-generate_flashcards_by_course_id", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/QAItem"}, "title": "Response Courses-Generate Flashcards By Course Id"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/chat/{course_id}/stream": {"post": {"tags": ["chat"], "summary": "Stream chat responses", "description": "Stream AI-generated responses based on course materials", "operationId": "chat-stream_chat", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "course_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Course Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ChatMessage"}}}}, "responses": {"200": {"description": "Successful streaming response"}, "404": {"description": "Course not found"}, "401": {"description": "Not authenticated"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/chat/{course_id}/history": {"get": {"tags": ["chat"], "summary": "Get chat history", "description": "Retrieve chat history for a course", "operationId": "chat-get_chat_history", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "course_id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Course Id"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 50, "title": "Limit"}}], "responses": {"200": {"description": "List of chat messages", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/ChatPublic"}, "title": "Response 200 Chat-Get Chat History"}}}}, "404": {"description": "Course not found"}, "401": {"description": "Not authenticated"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/documents/process": {"post": {"tags": ["documents"], "summary": "Process Multiple Documents", "description": "Accept multiple PDF uploads, save to temp files, and queue a background task for each.", "operationId": "documents-process_multiple_documents", "requestBody": {"content": {"multipart/form-data": {"schema": {"$ref": "#/components/schemas/Body_documents-process_multiple_documents"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/documents/{id}": {"get": {"tags": ["documents"], "summary": "Read Document", "description": "Get a document by its ID, ensuring the user has permissions.", "operationId": "documents-read_document", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Document"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["documents"], "summary": "Delete Document", "description": "Delete a document by its ID, ensuring the user has permissions.", "operationId": "documents-delete_document", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Documents-Delete Document"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/quiz-sessions/{id}": {"get": {"tags": ["quiz-sessions"], "summary": "Get Quiz Session Optimized", "description": "Retrieves a QuizSession, eagerly loading attempts ONLY if completed,\nor just the session and quizzes if in progress.", "operationId": "quiz-sessions-get_quiz_session_optimized", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QuizSessionPublicWithResults"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/quiz-sessions/{id}/score": {"post": {"tags": ["quiz-sessions"], "summary": "Submit And Score Quiz Batch", "description": "API endpoint to receive a batch of user answers and score a specific\nQuizSession identified by the session_id.", "operationId": "quiz-sessions-submit_and_score_quiz_batch", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "session_id", "in": "query", "required": true, "schema": {"type": "string", "format": "uuid", "title": "Session Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QuizSubmissionBatch"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QuizScoreSummary"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/private/users/": {"post": {"tags": ["private"], "summary": "Create User", "description": "Create a new user.", "operationId": "private-create_user", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/PrivateUserCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserPublic"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"Body_documents-process_multiple_documents": {"properties": {"files": {"items": {"type": "string", "format": "binary"}, "type": "array", "title": "Files"}, "course_id": {"type": "string", "format": "uuid", "title": "Course Id"}}, "type": "object", "required": ["files", "course_id"], "title": "Body_documents-process_multiple_documents"}, "Body_login-login_access_token": {"properties": {"grant_type": {"anyOf": [{"type": "string", "pattern": "^password$"}, {"type": "null"}], "title": "Grant Type"}, "username": {"type": "string", "title": "Username"}, "password": {"type": "string", "format": "password", "title": "Password"}, "scope": {"type": "string", "title": "Scope", "default": ""}, "client_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Id"}, "client_secret": {"anyOf": [{"type": "string"}, {"type": "null"}], "format": "password", "title": "Client Secret"}}, "type": "object", "required": ["username", "password"], "title": "Body_login-login_access_token"}, "ChatMessage": {"properties": {"message": {"type": "string", "title": "Message"}, "continue_response": {"type": "boolean", "title": "Continue Response", "default": false}}, "type": "object", "required": ["message"], "title": "ChatMessage", "example": {"continue_response": false, "message": "What is the main topic of the course?"}}, "ChatPublic": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "course_id": {"type": "string", "format": "uuid", "title": "Course Id"}, "total_submitted": {"type": "integer", "title": "Total Submitted"}, "total_correct": {"type": "integer", "title": "Total Correct"}, "score_percentage": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Score Percentage"}, "is_completed": {"type": "boolean", "title": "Is Completed"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "message": {"type": "string", "title": "Message"}, "is_system": {"type": "boolean", "title": "Is System"}}, "type": "object", "required": ["id", "course_id", "total_submitted", "total_correct", "is_completed", "created_at", "updated_at", "message", "is_system"], "title": "ChatPublic"}, "Course": {"properties": {"name": {"type": "string", "maxLength": 255, "minLength": 3, "title": "Name"}, "description": {"anyOf": [{"type": "string", "maxLength": 1020}, {"type": "null"}], "title": "Description"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "owner_id": {"type": "string", "format": "uuid", "title": "Owner Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}}, "type": "object", "required": ["name", "owner_id"], "title": "Course"}, "CourseCreate": {"properties": {"name": {"type": "string", "maxLength": 255, "minLength": 3, "title": "Name"}, "description": {"anyOf": [{"type": "string", "maxLength": 1020}, {"type": "null"}], "title": "Description"}}, "type": "object", "required": ["name"], "title": "CourseCreate"}, "CoursePublic": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "owner_id": {"type": "string", "format": "uuid", "title": "Owner Id"}, "name": {"type": "string", "title": "Name"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "documents": {"items": {"$ref": "#/components/schemas/DocumentPublic"}, "type": "array", "title": "Documents"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}}, "type": "object", "required": ["id", "owner_id", "name", "documents", "created_at", "updated_at"], "title": "CoursePublic"}, "CourseUpdate": {"properties": {"name": {"anyOf": [{"type": "string", "maxLength": 255, "minLength": 3}, {"type": "null"}], "title": "Name"}, "description": {"anyOf": [{"type": "string", "maxLength": 1020}, {"type": "null"}], "title": "Description"}}, "type": "object", "title": "CourseUpdate"}, "CourseWithDocuments": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "owner_id": {"type": "string", "format": "uuid", "title": "Owner Id"}, "name": {"type": "string", "title": "Name"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "documents": {"items": {"$ref": "#/components/schemas/DocumentPublic"}, "type": "array", "title": "Documents", "default": []}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}}, "type": "object", "required": ["id", "owner_id", "name", "created_at", "updated_at"], "title": "CourseWithDocuments"}, "CoursesPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/CoursePublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "CoursesPublic"}, "DifficultyLevel": {"type": "string", "enum": ["easy", "medium", "hard", "expert", "all"], "title": "DifficultyLevel"}, "Document": {"properties": {"title": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Title"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "chunk_count": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Chunk Count"}, "course_id": {"type": "string", "format": "uuid", "title": "Course Id"}, "embedding_namespace": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Embedding Namespace"}, "filename": {"type": "string", "title": "Filename"}, "status": {"$ref": "#/components/schemas/DocumentStatus", "default": "pending"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}}, "type": "object", "required": ["title", "course_id", "filename"], "title": "Document"}, "DocumentPublic": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "course_id": {"type": "string", "format": "uuid", "title": "Course Id"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "status": {"$ref": "#/components/schemas/DocumentStatus"}}, "type": "object", "required": ["id", "course_id", "updated_at", "created_at", "status"], "title": "DocumentPublic"}, "DocumentStatus": {"type": "string", "enum": ["pending", "processing", "completed", "failed"], "title": "DocumentStatus"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "Item": {"properties": {"title": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Title"}, "description": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Description"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "owner_id": {"type": "string", "format": "uuid", "title": "Owner Id"}}, "type": "object", "required": ["title", "owner_id"], "title": "Item"}, "ItemCreate": {"properties": {"title": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Title"}, "description": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Description"}}, "type": "object", "required": ["title"], "title": "ItemCreate"}, "ItemPublic": {"properties": {"title": {"type": "string", "maxLength": 255, "minLength": 1, "title": "Title"}, "description": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Description"}, "id": {"type": "string", "format": "uuid", "title": "Id"}, "owner_id": {"type": "string", "format": "uuid", "title": "Owner Id"}}, "type": "object", "required": ["title", "id", "owner_id"], "title": "ItemPublic"}, "ItemUpdate": {"properties": {"title": {"anyOf": [{"type": "string", "maxLength": 255, "minLength": 1}, {"type": "null"}], "title": "Title"}, "description": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Description"}}, "type": "object", "title": "ItemUpdate"}, "ItemsPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/Item"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "ItemsPublic"}, "Message": {"properties": {"message": {"type": "string", "title": "Message"}}, "type": "object", "required": ["message"], "title": "Message"}, "NewPassword": {"properties": {"token": {"type": "string", "title": "Token"}, "new_password": {"type": "string", "maxLength": 40, "minLength": 8, "title": "New Password"}}, "type": "object", "required": ["token", "new_password"], "title": "NewPassword"}, "PrivateUserCreate": {"properties": {"email": {"type": "string", "title": "Email"}, "password": {"type": "string", "title": "Password"}, "full_name": {"type": "string", "title": "Full Name"}, "is_verified": {"type": "boolean", "title": "Is Verified", "default": false}}, "type": "object", "required": ["email", "password", "full_name"], "title": "PrivateUserCreate"}, "QAItem": {"properties": {"question": {"type": "string", "title": "Question"}, "answer": {"type": "string", "title": "Answer"}}, "type": "object", "required": ["question", "answer"], "title": "QAItem"}, "QuizAttemptPublic": {"properties": {"quiz_id": {"type": "string", "format": "uuid", "title": "Quiz Id"}, "selected_answer_text": {"type": "string", "title": "Selected Answer Text"}, "is_correct": {"type": "boolean", "title": "Is Correct"}, "correct_answer_text": {"type": "string", "title": "Correct Answer Text"}, "time_spent_seconds": {"type": "number", "title": "Time Spent Seconds"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}}, "type": "object", "required": ["quiz_id", "selected_answer_text", "is_correct", "correct_answer_text", "time_spent_seconds", "created_at"], "title": "QuizAttemptPublic", "description": "Public schema for a single QuizAttempt record.\nUsed to return the full history/results when a session is complete."}, "QuizChoice": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "text": {"type": "string", "title": "Text"}}, "type": "object", "required": ["id", "text"], "title": "QuizChoice"}, "QuizPublic": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "quiz_text": {"type": "string", "title": "Quiz Text"}, "choices": {"items": {"$ref": "#/components/schemas/QuizChoice"}, "type": "array", "title": "Choices"}}, "type": "object", "required": ["id", "quiz_text", "choices"], "title": "QuizPublic"}, "QuizScoreSummary": {"properties": {"total_submitted": {"type": "integer", "title": "Total Submitted"}, "total_correct": {"type": "integer", "title": "Total Correct"}, "score_percentage": {"type": "number", "title": "Score Percentage"}, "results": {"items": {"$ref": "#/components/schemas/SingleQuizScore"}, "type": "array", "title": "Results"}}, "type": "object", "required": ["total_submitted", "total_correct", "score_percentage", "results"], "title": "QuizScoreSummary", "description": "The overall score for the batch of submissions."}, "QuizSessionPublic": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "course_id": {"type": "string", "format": "uuid", "title": "Course Id"}, "total_submitted": {"type": "integer", "title": "Total Submitted"}, "total_correct": {"type": "integer", "title": "Total Correct"}, "score_percentage": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Score Percentage"}, "is_completed": {"type": "boolean", "title": "Is Completed"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}}, "type": "object", "required": ["id", "course_id", "total_submitted", "total_correct", "is_completed", "created_at", "updated_at"], "title": "QuizSessionPublic", "description": "Public schema for a QuizSession."}, "QuizSessionPublicWithResults": {"properties": {"id": {"type": "string", "format": "uuid", "title": "Id"}, "course_id": {"type": "string", "format": "uuid", "title": "Course Id"}, "total_submitted": {"type": "integer", "title": "Total Submitted"}, "total_correct": {"type": "integer", "title": "Total Correct"}, "score_percentage": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Score Percentage"}, "is_completed": {"type": "boolean", "title": "Is Completed"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}, "quizzes": {"items": {"$ref": "#/components/schemas/QuizPublic"}, "type": "array", "title": "Quizzes"}, "results": {"items": {"$ref": "#/components/schemas/QuizAttemptPublic"}, "type": "array", "title": "Results"}}, "type": "object", "required": ["id", "course_id", "total_submitted", "total_correct", "is_completed", "created_at", "updated_at"], "title": "QuizSessionPublicWithResults", "description": "Expanded schema that includes quiz attempts (results)\nwhen the session is marked as completed."}, "QuizSessionsList": {"properties": {"data": {"items": {"$ref": "#/components/schemas/QuizSessionPublic"}, "type": "array", "title": "Data"}}, "type": "object", "required": ["data"], "title": "QuizSessionsList"}, "QuizStats": {"properties": {"best_total_submitted": {"type": "integer", "title": "Best Total Submitted"}, "best_total_correct": {"type": "integer", "title": "Best Total Correct"}, "best_score_percentage": {"type": "number", "title": "Best Score Percentage"}, "average_score": {"type": "number", "title": "Average Score"}, "attempts": {"type": "integer", "title": "Attempts"}}, "type": "object", "required": ["best_total_submitted", "best_total_correct", "best_score_percentage", "average_score", "attempts"], "title": "QuizStats"}, "QuizSubmissionBatch": {"properties": {"submissions": {"items": {"$ref": "#/components/schemas/SingleQuizSubmission"}, "type": "array", "title": "Submissions"}, "total_time_seconds": {"type": "number", "title": "Total Time Seconds", "default": 0.0}}, "type": "object", "required": ["submissions"], "title": "QuizSubmissionBatch", "description": "Container for multiple quiz submissions."}, "QuizzesPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/QuizPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "QuizzesPublic"}, "SingleQuizScore": {"properties": {"quiz_id": {"type": "string", "format": "uuid", "title": "Quiz Id"}, "is_correct": {"type": "boolean", "title": "Is Correct"}, "correct_answer_text": {"type": "string", "title": "Correct Answer Text"}, "feedback": {"type": "string", "title": "Feedback"}}, "type": "object", "required": ["quiz_id", "is_correct", "correct_answer_text", "feedback"], "title": "SingleQuizScore", "description": "The result for a single question."}, "SingleQuizSubmission": {"properties": {"quiz_id": {"type": "string", "format": "uuid", "title": "Quiz Id"}, "selected_answer_text": {"type": "string", "title": "Selected Answer Text"}}, "type": "object", "required": ["quiz_id", "selected_answer_text"], "title": "SingleQuizSubmission", "description": "The user's answer for one question."}, "Token": {"properties": {"access_token": {"type": "string", "title": "Access Token"}, "token_type": {"type": "string", "title": "Token Type", "default": "bearer"}}, "type": "object", "required": ["access_token"], "title": "Token"}, "UpdatePassword": {"properties": {"current_password": {"type": "string", "maxLength": 40, "minLength": 8, "title": "Current Password"}, "new_password": {"type": "string", "maxLength": 40, "minLength": 8, "title": "New Password"}}, "type": "object", "required": ["current_password", "new_password"], "title": "UpdatePassword"}, "UserCreate": {"properties": {"email": {"type": "string", "maxLength": 255, "format": "email", "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "is_superuser": {"type": "boolean", "title": "Is Superuser", "default": false}, "full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}, "password": {"type": "string", "maxLength": 40, "minLength": 8, "title": "Password"}}, "type": "object", "required": ["email", "password"], "title": "UserCreate"}, "UserPublic": {"properties": {"email": {"type": "string", "maxLength": 255, "format": "email", "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "is_superuser": {"type": "boolean", "title": "Is Superuser", "default": false}, "full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}, "id": {"type": "string", "format": "uuid", "title": "Id"}}, "type": "object", "required": ["email", "id"], "title": "UserPublic"}, "UserRegister": {"properties": {"email": {"type": "string", "maxLength": 255, "format": "email", "title": "Email"}, "password": {"type": "string", "maxLength": 40, "minLength": 8, "title": "Password"}, "full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}}, "type": "object", "required": ["email", "password"], "title": "UserRegister"}, "UserUpdate": {"properties": {"email": {"anyOf": [{"type": "string", "maxLength": 255, "format": "email"}, {"type": "null"}], "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "is_superuser": {"type": "boolean", "title": "Is Superuser", "default": false}, "full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}, "password": {"anyOf": [{"type": "string", "maxLength": 40, "minLength": 8}, {"type": "null"}], "title": "Password"}}, "type": "object", "title": "UserUpdate"}, "UserUpdateMe": {"properties": {"full_name": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Full Name"}, "email": {"anyOf": [{"type": "string", "maxLength": 255, "format": "email"}, {"type": "null"}], "title": "Email"}}, "type": "object", "title": "UserUpdateMe"}, "UsersPublic": {"properties": {"data": {"items": {"$ref": "#/components/schemas/UserPublic"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "UsersPublic"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "/api/v1/login/access-token"}}}}}}
